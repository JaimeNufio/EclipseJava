import java.awt.GridLayout;
import javax.swing.JFrame;

@SuppressWarnings("serial")
public class TicTacToe extends JFrame {
	
	/*
	 *   0 1 2
	 *   3 4 5
	 *   6 7 8
	 */
	
	public static myButton[] map = new myButton[9];
	
	public static int[][] winConditions = {
			{0,1,2},{3,4,5},{6,7,8},
			{0,3,6},{1,4,7},{2,5,8},
			{0,4,8},{6,4,2}
		};
	
	public static int[] playerPos = {-1,-1,-1,-1,-1,-1,-1,-1,-1},compPos = {-1,-1,-1,-1,-1,-1,-1,-1,-1};
	public static boolean[] player = new boolean[9], comp = new boolean[9];
	
	
	private TicTacToe(){
		
		super("Hello, World");
		
		setSize(600,600);
		setResizable(false);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLayout(new GridLayout(3,3));

		for (int i = 0; i < map.length; i++){
			map[i] = new myButton(i+"");
        }
        
        for (int i = 0 ; i < map.length; i++){
            add(map[i]);
        }
	}
	
	public static void updateGui(myButton button){
		if (button.state){
			button.setText("X");
			//System.out.println(button.getState());
		}else{
			button.setText("O");
			//System.out.println(button.getState());
		}
	}
	
	public static void updateGame(){ //detects moves made by player
	
		int count = -1;
		
		for (int i = 0; i < map.length; i++){
			if (map[i].state){
				player[i] = true;
				count++;
				playerPos[count] = i; //tell where the player has moved
			}
		}
		
		for (int i = 0; i < playerPos.length; i++){
			if (!(playerPos[i] == -1)){
				//System.out.println(playerPos[i]);
			}
		}
		
	}
	
	public static void findWinState(){
		
		int count = 0;
		for (int i = 0; i < winConditions.length; i++){
			for (int o = 0; o < winConditions[i].length; o++){
				count = 0;
				for (int p = 0; p < playerPos.length; p++){
					if (playerPos[p] == winConditions[i][o]){
						System.out.println(playerPos[p]+" is not equal to "+winConditions[i][o]);
						count++;
						System.out.println(count);
					}
				}
				if (count >= 2){
					System.out.println("win conditions: "+i);
					break;
				}
			}
		}
		
	}
	
	public static void main(String[] args) throws InterruptedException {
		
		new TicTacToe().setVisible(true);

		while (true){
			
			Thread.sleep(500);
			
			for (int i = 0; i < map.length; i++){
				player[i] = map[i].getState();
				updateGui(map[i]);
			}
			
			updateGame();
			findWinState();
		}
		
	}

}
